buildscript {
    repositories {
    	mavenCentral()
    	gradlePluginPortal()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
	
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+"
        classpath group: "gradle.plugin.com.matthewprenger", name: "CurseGradle", version: "1.4.0"
        classpath group: "com.modrinth.minotaur", name: "com.modrinth.minotaur.gradle.plugin", version: "2.+"
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'com.modrinth.minotaur'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
compileJava {
    sourceCompatibility = "8"
	targetCompatibility = "8"
	options.encoding = 'UTF-8'
}

repositories {
    maven {
        name = "CurseMaven"
        url = "https://www.cursemaven.com"
    }
}

dependencies {
	minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2860"

    compileOnly fg.deobf("curse.maven:railcraft-51195:2687757")
	implementation fg.deobf("curse.maven:baubles-227083:2518667")
	
	implementation ("net.minecraftforge:mergetool:0.2.3.3") { force = true }

    //implementation fg.deobf("com.azanor:Baubles:${VERSION_BAUBLES}")
    //deobfCompile "curse.maven:cyclic-239286:3089348"
    //deobfCompile "curse.maven:coffee-spawner-257588:2515688"
    //compile "net.industrial-craft:industrialcraft-2:2.8.221-ex112:dev"
    //deobfCompile "mezz.jei:jei_1.12.2:4.16.1.302"
}

minecraft {
    mappings channel: "stable", version: "39-1.12"
	
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
	runs {
		"client" {
			workingDirectory file("./run")
			mods { "${project.name}" { source sourceSets.main } }
			jvmArg "-Dfml.coreMods.load=${COREMOD_PATH}"
		}
		
		"server" {
			workingDirectory file("./run/server")
			mods { "${project.name}" { source sourceSets.main } }
		}
	}
	
}

jar {
    manifest {
        attributes([
                "Specification-Title": "somnia",
                "Specification-Vendor": "kingrunes",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"kingrunes",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				
				"FMLAT": "accesstransformer.cfg",
				"FMLCorePlugin": COREMOD_PATH, 
				"FMLCorePluginContainsFMLMod": "true"
        ])
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    //inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    filesMatching("mcmod.info") {
		expand "version": project.version
	}
}

curseforge {
    apiKey = System.getenv("CURSEFORGE_TOKEN") ?: project.findProperty("CURSEFORGE_TOKEN") as String ?: "DUMMY"
    project {
        id = "1062151"
        //changelogType = "markdown"
        changelog = ""
        releaseType = "release"
        mainArtifact(tasks.getByName("jar"), {
            relations {
                optionalDependency("openblocks")
                optionalDependency("cyclic")
                optionalDependency("dark-utilities")
                optionalDependency("railcraft")
            }
        })
        addGameVersion("Forge")
        addGameVersion("1.12.2")
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN") ?: project.findProperty("MODRINTH_TOKEN") as String ?: "DUMMY"
    projectId = "xUSE1CmZ"
    versionNumber = project.version
    uploadFile = tasks.getByName("jar")
    gameVersions = ["1.12.2"] 
	loaders = ["forge"]
}

//When Forge 1.12 loads mods from a directory that's been put on the classpath, it expects to find resources in the same directory.
//Default Gradle behavior puts resources in ./build/resources/main instead of ./build/classes/main/java. Let's change that.
sourceSets.all { it.output.resourcesDir = it.output.classesDirs.getFiles().iterator().next() }